name: Comments Protocol CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - "docs/**"
      - "changesets/**"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "changesets/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-protocol:
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: packages/protocol
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Setup pnpm"
        uses: "pnpm/action-setup@v2"

      - name: "Setup Node.js"
        uses: "actions/setup-node@v4"
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: "Install the Node.js dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Build the contracts and print their size"
        run: "forge build --sizes --skip test"

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test-protocol:
    needs: ["build-protocol"]
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: packages/protocol
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Setup pnpm"
        uses: "pnpm/action-setup@v2"

      - name: "Setup Node.js"
        uses: "actions/setup-node@v4"
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: "Install the Node.js dependencies"
        run: "pnpm install"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Run the tests"
        run: "forge test -vvv"

      - name: "Add test summary"
        run: |
          echo "## Tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  build-js:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    env:
      APP_SIGNER_PRIVATE_KEY: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      NEXT_PUBLIC_APP_SIGNER_ADDRESS: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      NEXT_PUBLIC_COMMENTS_INDEXER_URL: "https://example.com/indexer"
      NEXT_PUBLIC_WC_PROJECT_ID: "test-project-id"
      SUBMITTER_PRIVATE_KEY: "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
      APP_URL: "http://localhost:3000"
      WEBHOOK_SECRET: "secret"
      TURBO_UI: "false"
      CONTRACT_OWNER_ADDRESS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
      FUND_ADDRESS: "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
    name: Build and Test on Node.js 22
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - uses: pnpm/action-setup@v4
        name: Install pnpm

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the project
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm check-types

      - name: Test
        run: pnpm test

      - name: "Protocol: Build ABI"
        run: pnpm run build:abi
        working-directory: packages/protocol

      - name: "Protocol: Ensure ABI is up to date"
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "ABIs needs to be synced, please run \`pnpm run build:abi\` in the protocol folder" >&2
            git status
            exit 1
          fi
        shell: bash

      - name: "SDK: Ensure SDK production contract addreses are up to date"
        run: node --experimental-strip-types --no-warnings ./scripts/check-contract-addresses.ts
        working-directory: packages/sdk
        env:
          NODE_ENV: "production"

      - name: "SDK: Ensure SDK development contract addreses are up to date"
        run: |
          pnpm run build:dev
          node --experimental-strip-types --no-warnings ./scripts/check-contract-addresses.ts
        working-directory: packages/sdk
        env:
          NODE_ENV: "development"

  build-docs:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      TURBO_UI: "false"
    name: Build docs to check for out of sync files
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - uses: pnpm/action-setup@v4
        name: Install pnpm

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the project
        run: pnpm build

      - name: "Docs: Build docs"
        run: pnpm run build
        working-directory: docs

      - name: "Docs: Warn if docs are not synced"
        id: docs-warn-out-of-sync
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::warning ::Below files are out of sync"
            git status --porcelain | while read -r line; do
              # Extract the filename (3rd character onward)
              file=$(echo "$line" | cut -c3-)
              # Print a warning for each file
              echo "::warning file=$file::$file"
            done
            exit 1
          fi
        shell: bash
