NODE_ENV=development

# (REQUIRED) App identity signer private key. If you have foundry installed, you can run `cast wallet new` to generate a new private key.
APP_SIGNER_PRIVATE_KEY=
# (REQUIRED) address from APP_SIGNER_PRIVATE_KEY
NEXT_PUBLIC_APP_SIGNER_ADDRESS=

# (REQUIRED if you don't want to use privy submitter) Submitter private key - pays for gas (this is an anvil test account)
SUBMITTER_PRIVATE_KEY="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"

# (REQUIRED on production)
NEXT_PUBLIC_PROD_CHAIN_ID=84532

# Privy Submitter - pays for gas (https://dashboard.privy.io/)
## (REQUIRED if privy submitter should be used) App Settings
PRIVY_APP_ID=
## (REQUIRED if privy submitter should be used)
PRIVY_SECRET=

## Authorization Keys
## (REQUIRED if privy submitter should be used)
PRIVY_AUTHORIZATION_KEY=

## Wallets
## (REQUIRED if privy submitter should be used)
PRIVY_WALLET_ADDRESS=
## (REQUIRED if privy submitter should be used)
PRIVY_WALLET_ID=

# (REQUIRED) WalletConnect project ID (https://cloud.reown.com)
NEXT_PUBLIC_WC_PROJECT_ID=

# (REQUIRED) The URL of the app (for authorizing comments from server)
APP_URL="http://localhost:3000"

# (REQUIRED) The URL of the comments indexer (for fetching comments)
NEXT_PUBLIC_COMMENTS_INDEXER_URL="http://localhost:42069"

# (REQUIRED on production) Ethereum RPC node used on production  
NEXT_PUBLIC_RPC_URL=

# (OPTIONAL) Rest api of kv store (redis) for rate limiting
KV_REST_API_URL=

# (OPTIONAL) Token for kv store (redis) for rate limiting
KV_REST_API_TOKEN=

# (OPTIONAL) If omitted the comment author will not render as link
# use {address} for commenter's address
NEXT_PUBLIC_COMMENT_AUTHOR_URL="https://app.interface.social/{address}"

# (OPTIONAL) ZeroEx API key
# Necessary for swap with comment example
ZEROEX_API_KEY=

# (OPTIONAL) Should we show the swap example?
# This should be allowed only if the EIP7702 supporting chain is selected + ZEROEX_API_KEY is set
# Allowed values (1, 0)
NEXT_PUBLIC_ENABLE_SWAPPING=


# (REQUIRED) JWT for Pinata API 
# See https://docs.pinata.cloud/frameworks/next-js
PINATA_JWT=""

#Â (REQUIRED) 
# See https://docs.pinata.cloud/frameworks/next-js
NEXT_PUBLIC_PINATA_GATEWAY_URL=""

# (REQUIRED) used for ENS name resolution (ETH mainnet)
ENS_RPC_URL=""

# (REQUIRED) used for farcaster account resolution
NEYNAR_API_KEY=""


# ERC20_RPC_URL_{chainId}=""
# RPC URL used to resolve comment ERC20 tickers/addresss
# You can set up multiple RPC endpoints and they will be used for resolution if the resolution for comment's chain id is not set, it will always return null
# Usually you should match the RPC urls for chains you are indexing
ERC20_RPC_URL_31337="http://127.0.0.1:8545"

# (REQUIRED FOR EVERY RPC URL) ERC20_TOKEN_URL_{chainId}=""
# A URL that is returned with erc20 token reference in token, {tokenAddress} is replaced with token's address at the chain.
# This value is used at index time so if you made a mistake it won't be updated unless you reindex
#
# For example for Mainne this can be set as ERC20_TOKEN_URL_1="https://etherscan.io/address/{tokenAddress}"
ERC20_TOKEN_URL_31337="http://127.0.0.1:8545/{tokenAddress}"

# (Optional) - required if you want to support suggestions for ENS names
# GRAPH_API_KEY=

# (Optional) - a path to ENS graphql api, works only if GRAPH_API_KEY is provided
# GRAPH_ENS_SUBGRAPH_URL="https://gateway.thegraph.com/api/subgraphs/id/5XqPmWe6gjyrJtFn9cLy237i4cWw2j9HcUJEXsP5qGtH"

# (Required) - Api Key for Sim Token Info API
SIM_API_KEY=

# (Optional) - URL for GraphQL subgraph of ENSNode. It is used for ENS name suggestions
# If not provided ENS name suggestions will not be provided
ENSNODE_SUBGRAPH_URL="https://api.alpha.ensnode.io/subgraph"